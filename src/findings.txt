52.
    Did initial project setup
    Counter.jsx = Class component and Header.jsx = Functional component

53.
    UI changes - Added +1 and -1 buttons

54.
    Added new functions in counter.jsx to show which button was clicked upon clicking.
    Attached it using onClick event

55.
    State = Container where we want to store some value and when we can retrieve it when required
    With class based components, we can define state within constructor.

    constructor(){
    }

    If we simply add this line in counter class component, it will throw console error.
    Since, we're using class component, and it extends React.Component, we need to pass props to base class.
    So, EVEN if we're not consuming any props, we'll need to modify the constructor code to look like this:

    constructor(props){
        super(props);
    }

    IMP - When we create constructor, need to pass props to base class i.e. React.Component
    In the constructor, we can create state object and set it to either undefined or 0.
    
    IMP - State only works with class components. With functional components, we have hooks
    
56.
    IMP - STATE is IMMUTABLE. WE CANNOT DIRECTLY EDIT THE STATE.
    For Ex: we cannot have this.state.count =1 ;    //Will throw error

    How to modify state? - Use this.setState({object}) method

    Right now, we've used handleAttack and handleDefence method. They're not bound by default
    We need to bind the this.handleAttack with handleAttack() function.
    For doing that, in the constructor, we need to write the .bind() method